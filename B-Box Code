#Yuh



import random  
import pandas as pd
import numpy as np
from random import choice

#THIS PART LETS YOU CHOOSE HOW MANY OUTPUTS THROUGH YOUR INPUT OF THE NUMBER RANGE
range(0000000000,9999999999)
num_list = list(range(00000000,99999999))

random.sample(num_list, int(input('How many rows?')))

#LISTS OF DOCTORS WITH A RANDOM GENERATOR OF ONE FULL NAME
fn_list = ['Dr. Mark', 'Dr. Doug', 'Dr. Susan', 'Dr. John', 'Dr. Carol', 'Dr. Derek', 'Dr. Meredith', 'Dr. Andrew', 'Dr. Jackson', 'Dr. Alex', 'Dr. Izzie', 'Dr. Callie', 'Dr. Will', 'Dr. Natalie', 'Dr. Connor', 'Dr. Ethan', 'Dr. Samantha', 'Dr. Noah', 'Dr. Sam', 'Dr. David', 'Dr. Isidore', 'Dr. Ava']

ln_list = ['Greene', 'Ross', 'Lewis', 'Carter', 'Hathaway', 'Shepherd', 'Grey', 'Deluca', 'Sloan', 'Avery', 'Karev', 'Stevens', 'Torres', 'Halstead', 'Manning', 'Reese', 'Rhodes', 'Choi', 'Zanetti', 'Sexton', 'Abrams', 'Downey']

print(random.choice(fn_list), random.choice(ln_list))


----------------------------------------------------------------------------------------------------------------------------------------------------------
DeVaughn
#Import Packages
import tkinter
import pandas as pd
import random
import numpy as np


#List of Doctor names
n_list = ['Dr. Mark Greene', 'Dr. Doug Ross', 'Dr. Susan Lewis', 'Dr. John Carter', 'Dr. Carol Hathaway', 'Dr. Derek Sheperd', 'Dr. Meredith Grey', 'Dr. Andrew DeLuca', 'Dr. Jackson Sloan', 'Dr. Alex Avery', 'Dr. Izzie Karev', 'Dr. Callie Stevens']

#List of payer names
payer_list = ['Medicare', 'Medicaid', 'Private']

#List of specialty
s_list = ['Anesthesiology', 'Cardiology','Dermatology', 'Family Practice', 'Gastroenterology', 'Internal Medicine'] 

#Ask user for how many rows of data they want
list_size=int(input('How many rows would you like?'))

def list1(num_values):
    return list(range(num_values))

ind = list(range(list_size))


#Random generation for claim id, empi id and pop id
birdbox1=pd.DataFrame(index=ind,columns=['Provider_name','Claim_id','EMPI_id','Population_id','source_desc','specialty'])
for x in birdbox1.index.values:
    birdbox1.set_value(x,'Provider_name',random.choice(n_list))
    birdbox1.set_value(x,'source_desc',random.choice(payer_list))
    birdbox1.set_value(x,'specialty',random.choice(s_list))

birdbox1['Claim_id'] = np.random.randint(100000, 999999, birdbox1.shape[0])
birdbox1['EMPI_id'] = np.random.randint(100000, 999999, birdbox1.shape[0])
birdbox1['Population_id'] = np.random.randint(100000, 999999, birdbox1.shape[0])

#Random dates range
days = np.arange(0, 365)
base_date = np.datetime64('2016-01-01')
random_date = base_date + np.random.choice(days)
birdbox1['Service_from_Date'] = random_date
for x in birdbox1.index.values:
    birdbox1.set_value(x,'Service_from_Date', random.choice(days)+random_date)
    
newbasedate = np.datetime64('2018-01-01')
newrandomdate = newbasedate + np.random.choice(days)
birdbox1['Service_to_Date'] = random_date
for x in birdbox1.index.values:
    birdbox1.set_value(x,'Service_to_Date', random.choice(days)+newrandomdate)
    
    
#Random drg things
# read APRDRG file in#
drg = pd.read_csv(r"C:\Users\hh068327\OneDrive - Cerner Corporation\A.L.L\Demo Data\aprdrg_list.csv")
drg_list = drg.drg_admit_display.tolist()

for x in birdbox1.index.values:
    birdbox1.set_value(x,'APRDRG',random.choice(drg_list))
